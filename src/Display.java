
import java.awt.Robot;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dell1
 */
public class Display extends javax.swing.JFrame {
static double rx=1366/1360;
static double ry=768/695;
    /**
     * Creates new form Display
     */
    public Display() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        display1 = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(1366, 768));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        display1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        display1.setPreferredSize(new java.awt.Dimension(1366, 768));
        display1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                display1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                display1MouseMoved(evt);
            }
        });
        display1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                display1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                display1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                display1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout display1Layout = new javax.swing.GroupLayout(display1);
        display1.setLayout(display1Layout);
        display1Layout.setHorizontalGroup(
            display1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1364, Short.MAX_VALUE)
        );
        display1Layout.setVerticalGroup(
            display1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 766, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(display1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1360, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 695, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void display1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_display1MouseClicked
       
        

    }//GEN-LAST:event_display1MouseClicked

    private void display1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_display1MouseMoved
        System.out.println(""+evt.getY()+" x:"+evt.getX());
        new Thread(){

            @Override
            public void run() {
            //    super.run(); //To change body of generated methods, choose Tools | Templates.
            
            
        
        try {
            //System.out.println("x:"+getWidth()+"   y:"+getHeight());
            //double ratiox=1366/getWidth();
            //double ratioy=768/getHeight();
          int x=evt.getX();
          int y = evt.getY();
//          x=(int)((1366/1360)*(double)x);
//            y=(int)((768/695)*(double)y);
            
            
            
            Socket s = new Socket(Login.ip,1236);
            OutputStream os = s.getOutputStream();
            
            byte[] sizei = java.nio.ByteBuffer.allocate(4).putInt(x).array();
            os.write(sizei);
             byte[] sizej= java.nio.ByteBuffer.allocate(4).putInt(y).array();
            os.write(sizej);
            
            os.flush();
            os.close();
        } catch (IOException ex) {
            //Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }                                  
        }.start();
        
        
     
    }//GEN-LAST:event_display1MouseMoved

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
actionkey(evt,-1);

    }//GEN-LAST:event_formKeyPressed

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
       actionkey(evt,-2); // TODO add your handling code here:
    }//GEN-LAST:event_formKeyReleased
void mousedragpress(java.awt.event.MouseEvent evt,int action){

 new Thread(){

            @Override
            public void run() {
        //        super.run(); //To change body of generated methods, choose Tools | Templates.
            
            
        
        
        OutputStream os=null;
        try {
            int b=evt.getModifiers();
            System.err.println("mdpp"+b);
            Socket s;
            
                s = new Socket(Login.ip,1237);
            
            os = s.getOutputStream();
             byte[] sizei12 = java.nio.ByteBuffer.allocate(4).putInt(action).array();
            os.write(sizei12);
            
            byte[] sizei1 = java.nio.ByteBuffer.allocate(4).putInt(b).array();
            os.write(sizei1);
            
            os.flush();
            
             //
           // java.awt.event.MouseEvent.Meta
        } catch (IOException ex) {
            Logger.getLogger(Display.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                os.close();
            } catch (IOException ex) {
                Logger.getLogger(Display.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
            }
            
        }.start();
       

}
    private void display1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_display1MousePressed
mousedragpress(evt,-1);   System.err.println("ppp"+evt.getModifiers());     // TODO add your handling code here:
    }//GEN-LAST:event_display1MousePressed

    private void display1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_display1MouseReleased
mousedragpress(evt,-2);        // TODO add your handling code here:
    }//GEN-LAST:event_display1MouseReleased

    private void display1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_display1MouseDragged
      display1MouseMoved(evt);
    }//GEN-LAST:event_display1MouseDragged
void actionkey(java.awt.event.KeyEvent evt ,int action)
{
new Thread(){

    @Override
    public void run() {
      //  super.run(); //To change body of generated methods, choose Tools | Templates.
    try{
        int click=evt.getKeyCode();
        Socket s=new Socket(Login.ip,1238);
        OutputStream os=s.getOutputStream();
        byte[] sizei12=java.nio.ByteBuffer.allocate(4).putInt(action).array();
        os.write(sizei12);
        byte[] sizei1=java.nio.ByteBuffer.allocate(4).putInt(click).array();
        os.write(sizei1);
        os.flush();
        
    }
    catch(Exception e){}
    }
    
}.start();
    


}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel display1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
